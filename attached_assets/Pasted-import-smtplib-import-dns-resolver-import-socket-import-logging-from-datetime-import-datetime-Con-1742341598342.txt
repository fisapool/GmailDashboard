import smtplib
import dns.resolver
import socket
import logging
from datetime import datetime

# Configure logging
logging.basicConfig(filename='gmail_checker.log', level=logging.INFO, format='%(asctime)s - %(message)s')
logging.getLogger().addHandler(logging.StreamHandler())

def check_gmail_status(email, test_email):
    # Get the domain for the email
    domain = email.split('@')[1]
    
    # Get the MX record for the domain
    try:
        records = dns.resolver.resolve(domain, 'MX')
        mx_record = records[0].exchange
        mx_record = str(mx_record)
    except (dns.resolver.NoAnswer, dns.resolver.NXDOMAIN, dns.exception.Timeout, socket.error) as e:
        logging.error(f"DNS lookup failed for domain {domain}: {str(e)}")
        return "Unknown"

    # SMTP server connection setup
    smtp_server = smtplib.SMTP()
    smtp_server.set_debuglevel(0)

    # SMTP Conversation
    try:
        smtp_server.connect(mx_record)
        smtp_server.helo(smtp_server.local_hostname)  # local_hostname is the fqdn of the local machine
        smtp_server.mail(email)
        code, message = smtp_server.rcpt(test_email)
        smtp_server.quit()

        # Check if the email exists
        if code == 250:
            return "Healthy"
        else:
            return "Locked"

    except (smtplib.SMTPConnectError, smtplib.SMTPServerDisconnected, smtplib.SMTPResponseException, smtplib.SMTPException) as e:
        logging.error(f"SMTP error for {email}: {str(e)}")
        return "Locked"

def log_results(results):
    # Log results to a file
    with open('gmail_checker_results.txt', 'a') as f:
        f.write(f"Results for {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}:\n")
        for email, status in results.items():
            f.write(f"Email: {email}, Status: {status}\n")
        f.write("\n")

if __name__ == "__main__":
    # List of emails to check
    emails_to_check = [
        'example1@gmail.com',
        'example2@gmail.com',
        'example3@gmail.com'
    ]
    
    # Test email to send to
    test_email = 'test@example.com'

    # Check each email and log the results
    results = {}
    for email in emails_to_check:
        status = check_gmail_status(email, test_email)
        results[email] = status
        logging.info(f"Email: {email}, Status: {status}")

    # Log results to a file
    log_results(results)